<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://cys7885.github.io</id><title>SSo | Security research</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-06-13T19:32:26+09:00</updated> <author> <name>SSo</name> <uri>https://cys7885.github.io</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://cys7885.github.io" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 SSo </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Arbitrary file read to Remote Code Execution in GitLab before 12.9.0 (CVE-2020-10977)</title><link href="https://cys7885.github.io/posts/Arbitrary-file-read-to-Remote-Code-Execution-in-gitlab-before-12.9.0-(CVE-2020-10977)/" rel="alternate" type="text/html" title="Arbitrary file read to Remote Code Execution in GitLab before 12.9.0 (CVE-2020-10977)" /><published>2021-05-16T17:00:00+09:00</published> <updated>2021-06-13T19:27:31+09:00</updated> <id>https://cys7885.github.io/posts/Arbitrary-file-read-to-Remote-Code-Execution-in-gitlab-before-12.9.0-(CVE-2020-10977)/</id> <content src="https://cys7885.github.io/posts/Arbitrary-file-read-to-Remote-Code-Execution-in-gitlab-before-12.9.0-(CVE-2020-10977)/" /> <author> <name>SSo</name> </author> <category term="N-day &amp; BugBounty review" /> <category term="GitLab" /> <summary> GitLab에서 임의파일 읽기 취약점을 통해 RCE까지 trigger되는 1-day 취약점이 있어 분석하고 exploit을 재현하는 과정을 작성한다. 본 취약점은 GitLab 내 프로젝트 이슈를 타 프로젝트로 이동할 때 호출되는 UploadsRewrite 함수에서 파일 이름에 대한 별도의 필터가 없어 path traversal이 발생한다. 이 path traversal로 인해 공격자는 GitLab의 모든 파일을 읽을 수 있다. 그리고 이 파일 중 command를 실행할 때 필요한 secret 값이 저장된 file을 임의 파일 읽기 취약점을 통해 read한 후 remote code execution을 trigger할 수 있다. Information Vulnerable target ... </summary> </entry> <entry><title>Installing and configuring certificate for proxy setting above android 7.0 (Nougat)</title><link href="https://cys7885.github.io/posts/Installing-and-configuring-certificate-for-proxy-setting-above-android-7.0-(Nougat)/" rel="alternate" type="text/html" title="Installing and configuring certificate for proxy setting above android 7.0 (Nougat)" /><published>2021-05-01T18:30:00+09:00</published> <updated>2021-05-01T18:30:00+09:00</updated> <id>https://cys7885.github.io/posts/Installing-and-configuring-certificate-for-proxy-setting-above-android-7.0-(Nougat)/</id> <content src="https://cys7885.github.io/posts/Installing-and-configuring-certificate-for-proxy-setting-above-android-7.0-(Nougat)/" /> <author> <name>SSo</name> </author> <category term="Mobile" /> <category term="Android" /> <summary> Starting with Android 7.0 (Nougat) and later, SSL Pining is applied, and if you install a user private certificate locally, it is registered as a user certificate rather than a Root Certificate and cannot be used as a trusted certificate. This means that you cannot install a local user private certificate on an existing Android and intercept SSL packets using a proxy tool SSL packets. Therefo... </summary> </entry> </feed>
